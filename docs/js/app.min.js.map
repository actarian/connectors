{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","i","data","model","parse","JSON","geometry","materials","DEBUG","RAD","PI","SCALE","I","rad","degree","flipQuaternion","Quaternion","setFromAxisAngle","Vector3","CombinerItem","item","size","box","Box3","group","Group","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","color","Color","material","Mesh","uvsNeedUpdate","normalsNeedUpdate","verticesNeedUpdate","computeFaceNormals","computeVertexNormals","computeBoundingBox","setFromObject","getSize","console","log","BoxGeometry","z","MeshStandardMaterial","wireframe","transparent","opacity","set","joint","right","scale","add","lquaternion","multiplyQuaternions","quaternion","rquaternion","flip","flipped","rotation","onComplete","origin","helper","copy","oppositeQuaternion","s","arrow","ArrowHelper","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","push","map","adjust","combine","fit","previousQuaternion","previousPosition","groupPosition","getWorldPosition","filter","sub","setRotationFromQuaternion","multiply","updateMatrixWorld","getWorldQuaternion","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","index","indexOf","object","pop","parent","remove","splice","select","clone","emissive","update","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","pow","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","vfrom","vto","qfrom","qto","animation","onUpdate","lerpVectors","slerp","v","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        var i = 0;\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: i % 2 === 0 ? 'img/Body 1.js' : 'img/Angled Emitter 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n            i++;\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            joint: joint,\n        };\n\n        function enter() {\n            var item = this;\n            item.inner.position.x = item.size.x * SCALE;\n            TweenLite.to(item.inner.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                inner = item.inner;\n            // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);            \n            materials[1].color = new THREE.Color(0x000000);\n            var model = new THREE.Mesh(geometry, materials);\n            var material;\n\n            model.geometry.uvsNeedUpdate = true;\n            model.geometry.normalsNeedUpdate = true;\n            model.geometry.verticesNeedUpdate = true;\n\n            // model.geometry.computeMorphNormals();\n            model.geometry.computeFaceNormals();\n            model.geometry.computeVertexNormals();\n            model.geometry.computeBoundingBox();\n\n            // console.log(model);\n            box.setFromObject(model);\n            box.getSize(size);\n\n            if (true) {\n                console.log(size);\n                geometry = new THREE.BoxGeometry(size.x, size.y, size.z);\n                material = new THREE.MeshStandardMaterial({\n                    color: new THREE.Color(0.2 * ++I, 0, 0),\n                    wireframe: false,\n                    transparent: false,\n                    opacity: 1,\n                });\n                model = new THREE.Mesh(geometry, material);\n            }\n\n            model.position.set(size.x / 2, 0, 0);\n            var left = item.joint(\n                new THREE.Vector3(-size.x / 2, 0, 0),\n                new THREE.Vector3(0, 0, -rad(180)), // + rad(10)\n                0x00ff00\n            );\n            var right = item.joint(\n                new THREE.Vector3(size.x / 2, 0, 0),\n                // new THREE.Vector3(0, 0, -rad(10) + rad(20) * Math.random()),\n                new THREE.Vector3(0, 0, rad(0)),\n                0xff0000\n            );\n            inner.scale.set(SCALE, SCALE, SCALE);\n            model.add(left);\n            model.add(right);\n            inner.add(model);\n            group.add(inner);\n            // new items\n            item.model = model;\n            item.left = left;\n            item.lquaternion = new THREE.Quaternion().multiplyQuaternions(left.quaternion, flipQuaternion);\n            item.right = right;\n            item.rquaternion = right.quaternion; // not flipped cause already in opposite direction\n        }\n\n        function joint(origin, rotation, color) {\n            var item = this,\n                size = item.size;\n            // rotation.normalize();\n            var helper = new THREE.Group();\n            helper.position.copy(origin);\n            helper.rotation.x = rotation.x;\n            helper.rotation.y = rotation.y;\n            helper.rotation.z = rotation.z;\n            var oppositeQuaternion = new THREE.Quaternion();\n            oppositeQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), rad(180));\n            helper.oppositeQuaternion = new THREE.Quaternion().multiplyQuaternions(oppositeQuaternion, helper.quaternion);\n            if (DEBUG) {\n                var s = size.x / 10;\n                var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, color, s / 2, s / 2);\n                helper.arrow = arrow;\n                helper.add(arrow);\n            }\n            return helper;\n        }\n\n        function flip(callback) {\n            var item = this,\n                model = item.model;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            TweenLite.to(model.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    // item.group.updateMatrixWorld();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            return item;\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, right;\n\n            function combineItem(item, i) {\n                // item.inner.position.x += (0 - item.inner.position.x) / 5;\n                if (item.flipped) {\n                    lquaternion = item.rquaternion;\n                    right = item.left;\n                } else {\n                    lquaternion = item.lquaternion;\n                    right = item.right;\n                }\n                if (i > 0) {\n                    item.group.position.copy(previousPosition.sub(groupPosition));\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.model.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.inner.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        floor.position.x = combiner.center.x;\n        floor.position.z = combiner.center.z;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.inner.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.inner.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}