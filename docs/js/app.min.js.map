{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","i","data","model","parse","JSON","geometry","materials","DEBUG","RAD","PI","SCALE","I","rad","degree","flipQuaternion","Quaternion","setFromAxisAngle","Vector3","CombinerItem","item","size","box","Box3","group","Group","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","getJoints","color","Color","material","Mesh","uvsNeedUpdate","normalsNeedUpdate","verticesNeedUpdate","computeFaceNormals","computeVertexNormals","computeBoundingBox","setFromObject","getSize","BoxGeometry","z","MeshStandardMaterial","wireframe","transparent","opacity","set","joint","right","scale","add","lquaternion","multiplyQuaternions","quaternion","rquaternion","flip","flipped","rotation","onComplete","index","joints","keys","0","1","2","3","ids","Object","console","log","faces","filter","face","materialIndex","indexOf","String","key","normal","push","result","reduce","total","current","array","origin","helper","copy","oppositeQuaternion","s","arrow","ArrowHelper","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","map","adjust","combine","fit","previousQuaternion","previousPosition","groupPosition","getWorldPosition","sub","setRotationFromQuaternion","multiply","updateMatrixWorld","getWorldQuaternion","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","object","pop","parent","remove","splice","select","clone","emissive","update","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","pow","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","vfrom","vto","qfrom","qto","animation","onUpdate","lerpVectors","slerp","v","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        var i = 0;\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: i % 2 === 0 ? 'img/Body 1.js' : 'img/Angled Emitter 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n            i++;\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            getJoints: getJoints,\n            joint: joint,\n        };\n\n        function enter() {\n            var item = this;\n            item.inner.position.x = item.size.x * SCALE;\n            TweenLite.to(item.inner.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function getCentroid(faces) {\n            var scores = [1, 4, 6, 8];\n            var result = scores.reduce(function (total, current, index, array) {\n                return (total + current) / array.length;\n            });\n            console.log('getCentroid', result); // 4.75            \n        }\n\n        function getJoints(geometry, materials) {\n            var joints = {},\n                keys = {\n                    0: 'left',\n                    1: 'right',\n                    2: 'top',\n                    3: 'bottom',\n                },\n                ids = Object.keys(keys),\n                index;\n            console.log('ids', ids);\n            geometry.faces.filter(function (face) {\n                index = face.materialIndex;\n                if (ids.indexOf(String(index)) !== -1) {\n                    var key = keys[index];\n                    var joint = joints[key] || (joints[key] = {\n                        faces: []\n                    });\n                    joint.normal = joint.normal || face.normal; // assume all faces point toward direction;\n                    joint.faces.push(face);\n                }\n            });\n            getCentroid(null);\n            console.log('item.getJoints', joints);\n            return joints;\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                inner = item.inner;\n\n            var joints = item.getJoints(geometry, materials);\n\n            // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);            \n            materials[1].color = new THREE.Color(0x000000);\n            var model = new THREE.Mesh(geometry, materials);\n            var material;\n\n            model.geometry.uvsNeedUpdate = true;\n            model.geometry.normalsNeedUpdate = true;\n            model.geometry.verticesNeedUpdate = true;\n\n            // model.geometry.computeMorphNormals();\n            model.geometry.computeFaceNormals();\n            model.geometry.computeVertexNormals();\n            model.geometry.computeBoundingBox();\n\n            // console.log(model);\n            box.setFromObject(model);\n            box.getSize(size);\n\n            if (true) {\n                geometry = new THREE.BoxGeometry(size.x, size.y, size.z);\n                material = new THREE.MeshStandardMaterial({\n                    color: new THREE.Color(0.2 * ++I, 0, 0),\n                    wireframe: false,\n                    transparent: false,\n                    opacity: 1,\n                });\n                model = new THREE.Mesh(geometry, material);\n            }\n\n            model.position.set(size.x / 2, 0, 0);\n            var left = item.joint(\n                new THREE.Vector3(-size.x / 2, 0, 0),\n                new THREE.Vector3(0, 0, -rad(180)), // + rad(10)\n                0x00ff00\n            );\n            var right = item.joint(\n                new THREE.Vector3(size.x / 2, 0, 0),\n                // new THREE.Vector3(0, 0, -rad(10) + rad(20) * Math.random()),\n                new THREE.Vector3(0, 0, rad(0)),\n                0xff0000\n            );\n            inner.scale.set(SCALE, SCALE, SCALE);\n            model.add(left);\n            model.add(right);\n            inner.add(model);\n            group.add(inner);\n            // new items\n            item.model = model;\n            item.left = left;\n            item.lquaternion = new THREE.Quaternion().multiplyQuaternions(left.quaternion, flipQuaternion);\n            item.right = right;\n            item.rquaternion = right.quaternion; // not flipped cause already in opposite direction\n        }\n\n        function joint(origin, rotation, color) {\n            var item = this,\n                size = item.size;\n            // rotation.normalize();\n            var helper = new THREE.Group();\n            helper.position.copy(origin);\n            helper.rotation.x = rotation.x;\n            helper.rotation.y = rotation.y;\n            helper.rotation.z = rotation.z;\n            var oppositeQuaternion = new THREE.Quaternion();\n            oppositeQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), rad(180));\n            helper.oppositeQuaternion = new THREE.Quaternion().multiplyQuaternions(oppositeQuaternion, helper.quaternion);\n            if (DEBUG) {\n                var s = size.x / 10;\n                var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, color, s / 2, s / 2);\n                helper.arrow = arrow;\n                helper.add(arrow);\n            }\n            return helper;\n        }\n\n        function flip(callback) {\n            var item = this,\n                model = item.model;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            TweenLite.to(model.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    // item.group.updateMatrixWorld();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            return item;\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, right;\n\n            function combineItem(item, i) {\n                // item.inner.position.x += (0 - item.inner.position.x) / 5;\n                if (item.flipped) {\n                    lquaternion = item.rquaternion;\n                    right = item.left;\n                } else {\n                    lquaternion = item.lquaternion;\n                    right = item.right;\n                }\n                if (i > 0) {\n                    item.group.position.copy(previousPosition.sub(groupPosition));\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.model.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.inner.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        floor.position.x = combiner.center.x;\n        floor.position.z = combiner.center.z;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.inner.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.inner.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}