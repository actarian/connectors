{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","data","model","parse","JSON","geometry","materials","DEBUG","RAD","PI","SCALE","I","rad","degree","flipQuaternion","Quaternion","setFromAxisAngle","Vector3","CombinerItem","item","size","box","Box3","group","Group","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","BoxGeometry","material","MeshStandardMaterial","color","Color","wireframe","transparent","opacity","Mesh","setFromObject","getSize","set","joint","right","scale","add","lquaternion","multiplyQuaternions","quaternion","rquaternion","flip","flipped","rotation","onComplete","origin","s","helper","copy","z","oppositeQuaternion","arrow","ArrowHelper","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","push","map","adjust","combine","fit","previousQuaternion","previousPosition","groupPosition","getWorldPosition","filter","i","sub","setRotationFromQuaternion","multiply","updateMatrixWorld","getWorldQuaternion","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","index","indexOf","object","pop","parent","remove","splice","select","clone","emissive","update","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","pow","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","vfrom","vto","qfrom","qto","animation","onUpdate","lerpVectors","slerp","v","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: 'img/Body 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            joint: joint,\n        };\n\n        function enter() {\n            var item = this;\n            item.inner.position.x = item.size.x * SCALE;\n            TweenLite.to(item.inner.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                inner = item.inner;\n            geometry = new THREE.BoxGeometry(381, 95.2, 95.15);\n            // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);\n            var material = new THREE.MeshStandardMaterial({\n                color: new THREE.Color(0.2 * ++I, 0, 0),\n                wireframe: false,\n                transparent: false,\n                opacity: 1,\n            });\n            var model = new THREE.Mesh(geometry, material);\n            box.setFromObject(model);\n            box.getSize(size);\n            model.position.set(size.x / 2, 0, 0);\n            var left = item.joint(\n                new THREE.Vector3(-size.x / 2, 0, 0),\n                new THREE.Vector3(0, 0, -rad(180)), // + rad(10)\n                0x00ff00\n            );\n            var right = item.joint(\n                new THREE.Vector3(size.x / 2, 0, 0),\n                // new THREE.Vector3(0, 0, -rad(10) + rad(20) * Math.random()),\n                new THREE.Vector3(0, 0, rad(10)),\n                0xff0000\n            );\n            inner.scale.set(SCALE, SCALE, SCALE);\n            model.add(left);\n            model.add(right);\n            inner.add(model);\n            group.add(inner);\n            // new items\n            item.model = model;\n            item.left = left;\n            item.lquaternion = new THREE.Quaternion().multiplyQuaternions(left.quaternion, flipQuaternion);\n            item.right = right;\n            item.rquaternion = right.quaternion; // not flipped cause already in opposite direction\n        }\n\n        function joint(origin, rotation, color) {\n            var item = this,\n                size = item.size;\n            var s = size.x / 10;\n            // rotation.normalize();\n            var helper = new THREE.Group();\n            helper.position.copy(origin);\n            helper.rotation.x = rotation.x;\n            helper.rotation.y = rotation.y;\n            helper.rotation.z = rotation.z;\n            var oppositeQuaternion = new THREE.Quaternion();\n            oppositeQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), rad(180));\n            helper.oppositeQuaternion = new THREE.Quaternion().multiplyQuaternions(oppositeQuaternion, helper.quaternion);\n            if (DEBUG) {\n                var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, color, s / 2, s / 2);\n                helper.arrow = arrow;\n                helper.add(arrow);\n            }\n            return helper;\n        }\n\n        function flip(callback) {\n            var item = this,\n                model = item.model;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            TweenLite.to(model.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    // item.group.updateMatrixWorld();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            return item;\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, right;\n\n            function combineItem(item, i) {\n                // item.inner.position.x += (0 - item.inner.position.x) / 5;\n                if (item.flipped) {\n                    lquaternion = item.rquaternion;\n                    right = item.left;\n                } else {\n                    lquaternion = item.lquaternion;\n                    right = item.right;\n                }\n                if (i > 0) {\n                    item.group.position.copy(previousPosition.sub(groupPosition));\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.model.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.inner.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.inner.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.inner.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}