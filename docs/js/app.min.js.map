{"version":3,"sources":["docs/js/app.js"],"names":["Forge","this","loader","THREE","JSONLoader","prototype","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","data","replace","RegExp","model","parse","JSON","geometry","materials","window","DEBUG","RAD","Math","PI","rad","degree","CombinerItem","size","Vector3","box","Box3","group","Group","inner","init","BoxGeometry","material","MeshStandardMaterial","color","wireframe","Mesh","setFromObject","getSize","position","set","x","left","joint","right","random","add","flip","flipped","TweenLite","to","rotation","y","ease","Power2","easeOut","onComplete","origin","s","helper","copy","z","oppositeQuaternion","Quaternion","setFromAxisAngle","multiplyQuaternions","quaternion","arrow","ArrowHelper","Combiner","scene","camera","controls","flipping","items","hittables","projector","Projector","center","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","item","push","map","fitCamera","combine","previousQuaternion","previousPosition","groupPosition","length","getWorldPosition","filter","i","rotationQuaternion","sub","setRotationFromQuaternion","getWorldQuaternion","fit","getCenter","worldToLocal","offset","up","lookAt","updateProjectionMatrix","min","toScreen","max","sc","console","log","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","update","raycaster","hitted","intersectObjects","index","indexOf","object","remove","pop","parent","select","combiner","clone","fitGroup","v","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","Detector","webgl","forge","editor","document","querySelector","btnAdd","btnRemove","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","OrbitControls","Scene","light","PointLight","PointLightHelper","floor","GridHelper","animate","requestAnimationFrame","render","down","Raycaster","addEventListener","e","getTouch","setFromCamera","selection","enabled","diff","touch","addGetWebGLMessage","Vector2","clientX","clientY"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: 'img/Body 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var service = this;\n            service.size = new THREE.Vector3();\n            service.box = new THREE.Box3();\n            service.group = new THREE.Group();\n            service.inner = new THREE.Group();\n            service.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            init: init,\n            flip: flip,\n            joint: joint,\n        };\n\n        function init(geometry, materials) {\n            var service = this,\n                box = service.box,\n                size = service.size,\n                group = service.group,\n                inner = service.inner;\n            geometry = new THREE.BoxGeometry(10, 4, 4);\n            // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);\n            var material = new THREE.MeshStandardMaterial({\n                color: 0x888888,\n                wireframe: false,\n            });\n            var model = new THREE.Mesh(geometry, material);\n            box.setFromObject(model);\n            box.getSize(size);\n            model.position.set(size.x / 2, 0, 0);\n            var left = service.joint(\n                new THREE.Vector3(0, 0, 0),\n                new THREE.Vector3(0, 0, -rad(180)),\n                0x00ff00\n            );\n            var right = service.joint(\n                new THREE.Vector3(size.x, 0, 0),\n                new THREE.Vector3(0, 0, -rad(10) + rad(20) * Math.random()),\n                0xff0000\n            );\n            inner.position.x = size.x / 2;\n            inner.add(model);\n            inner.add(left);\n            inner.add(right);\n            group.add(inner);\n            // new items\n            service.model = model;\n            service.left = left;\n            service.right = right;\n        }\n\n        function joint(origin, rotation, color) {\n            var service = this,\n                size = service.size;\n            var s = size.x / 10;\n            // rotation.normalize();\n            var helper = new THREE.Group();\n            helper.position.copy(origin);\n            helper.rotation.x = rotation.x;\n            helper.rotation.y = rotation.y;\n            helper.rotation.z = rotation.z;\n            var oppositeQuaternion = new THREE.Quaternion();\n            oppositeQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), rad(180));\n            helper.oppositeQuaternion = new THREE.Quaternion().multiplyQuaternions(oppositeQuaternion, helper.quaternion);\n            if (DEBUG) {\n                var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, color, s / 2, s / 2);\n                helper.arrow = arrow;\n                helper.add(arrow);\n            }\n            return helper;\n        }\n\n        function flip(callback) {\n            var service = this,\n                model = service.model;\n            // console.log('flip()');\n            service.flipped = !service.flipped;\n            TweenLite.to(model.rotation, 0.3, {\n                y: service.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene, camera, controls) {\n            var service = this;\n            service.scene = scene;\n            service.camera = camera;\n            service.controls = controls;\n            service.flipping = 0;\n            service.items = [];\n            service.hittables = [];\n            service.projector = new THREE.Projector();\n            service.center = new THREE.Vector3();\n            service.size = new THREE.Vector3();\n            service.group = new THREE.Group();\n            service.box = new THREE.Box3();\n            service.boxhelper = new THREE.Box3Helper(service.box, 0xff0000);\n            service.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG) {\n                service.scene.add(service.boxhelper);\n                service.scene.add(service.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            combine: combine,\n            fit: fit,\n            fitCamera: fitCamera,\n            flip: flip,\n            remove: remove,\n            select: select,\n            update: update,\n            toScreen: toScreen,\n            toWorld: toWorld,\n        };\n\n        function update() {\n            var service = this,\n                group = service.group;\n            service.combine();\n            if (service.flipping === 0) {\n                service.fitGroup(group);\n            }\n        }\n\n        function add(geometry, materials) {\n            var service = this,\n                box = service.box,\n                size = service.size,\n                items = service.items,\n                hittables = service.hittables,\n                group = service.group;\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            service.fitCamera();\n            return item;\n        }\n\n        function remove() {\n            var service = this,\n                items = service.items,\n                hittables = service.hittables,\n                group = service.group;\n            if (items.length > 1) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                hittables = items.map(function (item) {\n                    return item.model;\n                });\n                service.fitCamera();\n            }\n        }\n\n        function combine() {\n            var service = this,\n                items = service.items,\n                group = service.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(function (item, i) {\n                    item.inner.position.x += (1 - item.inner.position.x) / 5;\n                    if (i > 0) {\n                        var rotationQuaternion = new THREE.Quaternion().multiplyQuaternions(previousQuaternion, item.left.oppositeQuaternion);\n                        item.group.position.copy(previousPosition.sub(groupPosition));\n                        // item.group.position.copy(previousPosition);\n                        item.group.setRotationFromQuaternion(rotationQuaternion);\n                    }\n                    /*\n                    if (i === 1) {\n                        item.model.rotation.y += 0.01;\n                    }\n                    */\n                    item.right.getWorldQuaternion(previousQuaternion);\n                    item.right.getWorldPosition(previousPosition);\n                });\n            }\n        }\n\n        function fit() {\n            var service = this,\n                box = service.box,\n                size = service.size,\n                center = service.center,\n                centerhelper = service.centerhelper,\n                group = service.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            return size;\n        }\n\n        function toWorld(v) {\n            var service = this,\n                projector = service.projector,\n                camera = service.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var service = this,\n                camera = service.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function fitCamera(offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var service = this,\n                projector = service.projector,\n                box = service.box,\n                size = service.size,\n                center = service.center,\n                group = service.group,\n                camera = service.camera,\n                controls = service.controls;\n            box.setFromObject(group);\n            box.getCenter(center);\n            camera.up = up;\n            camera.lookAt(center);\n            camera.updateProjectionMatrix();\n            var min = service.toScreen(box.min);\n            var max = service.toScreen(box.max);\n            var sc = service.toScreen(center);\n            console.log(min, max, sc);\n            box.applyMatrix4(camera.matrixWorldInverse);\n\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            camera.position.normalize().multiplyScalar(z);\n            var distance = camera.position.distanceTo(center);\n            // console.log(camera.position, disc.position);\n            // camera.far = distance + dim;\n            camera.updateProjectionMatrix();\n            if (controls) {\n                // controls.maxDistance = distance + dim;\n                controls.update();\n            }\n            /*\n            box.setFromObject(group);\n            box.getSize(size);\n            var max = Math.max(size.x, size.y, size.z);\n            var fov = camera.fov * RAD;\n            var z = max / 2 / Math.tan(fov / 2) * 1.5;\n            camera.position.normalize().multiplyScalar(z);\n            if (controls) {\n                controls.update();\n            }\n            */\n        }\n\n        function select(raycaster) {\n            var service = this,\n                items = service.items,\n                hittables = service.hittables;\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = combiner.hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.inner.rotation.clone();\n                return {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n            } else {\n                return null;\n            }\n        }\n\n        function flip(raycaster) {\n            var service = this,\n                items = service.items,\n                hittables = service.hittables;\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                service.flipping++;\n                item.flip(function () {\n                    service.flipping--;\n                });\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var editor = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    editor.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 50000);\n    camera.position.set(0, 20, 40);\n    camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene, camera, controls);\n    scene.add(combiner.group);\n\n    forge.load(function (geometry, materials) {\n        combiner.add(geometry, materials);\n    });\n    forge.load(function (geometry, materials) {\n        combiner.add(geometry, materials);\n    });\n    forge.load(function (geometry, materials) {\n        combiner.add(geometry, materials);\n    });\n\n    animate();\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.combine();\n        if (combiner.flipping === 0) {\n            combiner.fit();\n            floor.position.y = -combiner.size.y / 2;\n        }\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(30, 30, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function onResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / window.innerWidth) * 2 - 1, -(e.clientY / window.innerHeight) * 2 + 1\n        );\n    }\n\n    function onDown(e) {\n        down = getTouch(e);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        if (selection) {\n            controls.enabled = false;\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        } else {\n            down = null;\n        }\n    }\n\n    function onMove(e) {\n        if (down) {\n            var move = getTouch(e);\n            var diff = move.sub(down);\n            var index = down.index;\n            var rotation = down.item.inner.rotation;\n            rotation.x = down.rotation.x + diff.y * Math.PI;\n            // console.log('rotation.x', rotation.x);\n        }\n    }\n\n    function onUp(e) {\n        down = null;\n        controls.enabled = true;\n    }\n\n    function onDoubleClick(e) {\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.flip(raycaster);\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            combiner.add(geometry, materials);\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n    }\n\n    renderer.domElement.addEventListener('mousedown', onDown);\n    renderer.domElement.addEventListener('mousemove', onMove);\n    renderer.domElement.addEventListener('dblclick', onDoubleClick);\n\n    window.addEventListener('mouseup', onUp);\n    window.addEventListener('resize', onResize, false);\n\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n\n}());"]}