{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","i","data","model","parse","JSON","geometry","materials","DEBUG","RAD","PI","SCALE","I","flipQuaternion","Quaternion","setFromAxisAngle","Vector3","CombinerItem","item","size","box","Box3","group","Group","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","Mesh","setFromObject","getSize","material","joints","getJoints","color","Color","uvsNeedUpdate","normalsNeedUpdate","verticesNeedUpdate","computeFaceNormals","computeVertexNormals","computeBoundingBox","BoxGeometry","z","MeshStandardMaterial","wireframe","transparent","opacity","key","set","joint","normal","rotation","Euler","atan2","copy","add","oquaternion","multiplyQuaternions","quaternion","s","arrow","ArrowHelper","c","scale","flip","flipped","onComplete","face","ids","names","colors","map","index","indexOf","vertices","faces","String","materialIndex","push","a","b","reduce","divideScalar","right","getJoint","origin","helper","oppositeQuaternion","degree","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","adjust","combine","fit","lquaternion","previousQuaternion","previousPosition","groupPosition","getWorldPosition","filter","sub","setRotationFromQuaternion","multiply","updateMatrixWorld","getWorldQuaternion","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","object","pop","parent","remove","splice","select","clone","emissive","update","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","pow","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","vfrom","vto","qfrom","qto","animation","onUpdate","lerpVectors","slerp","v","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        var i = 0;\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: i % 2 === 0 ? 'img/Body 1.js' : 'img/Angled Emitter 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n            i++;\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            getJoints: getJoints,\n            getJoint: getJoint,\n        };\n\n        function enter() {\n            var item = this;\n            item.inner.position.x = item.size.x * SCALE;\n            TweenLite.to(item.inner.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function getCentroid(vertices) {\n            var center = vertices.reduce(function (a, b) {\n                return {\n                    x: a.x + b.x,\n                    y: a.y + b.y,\n                    z: a.z + b.z\n                };\n            });\n            return new THREE.Vector3().add(center).divideScalar(vertices.length);\n        }\n\n        function getJoints(geometry, materials, size) {\n            var joints = {},\n                ids = {},\n                names = ['left', 'right', 'top', 'bottom'],\n                colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00],\n                index, joint, face;\n            materials.map(function (material, index) {\n                // console.log(material);\n                var i = names.indexOf(material.name);\n                if (i !== -1) {\n                    var joint = new THREE.Group();\n                    joint.name = names[i];\n                    joint.vertices = [];\n                    joint.c = colors[i];\n                    joints[material.name] = joint;\n                    ids[index] = joint;\n                }\n            });\n            for (var i = 0; i < geometry.faces.length; i++) {\n                face = geometry.faces[i];\n                joint = ids[String(face.materialIndex)];\n                if (joint) {\n                    joint.normal = joint.normal || face.normal; // assume all faces point toward direction;\n                    joint.vertices.push(geometry.vertices[face.a]);\n                    joint.vertices.push(geometry.vertices[face.b]);\n                    joint.vertices.push(geometry.vertices[face.c]);\n                    // console.log(joint.name, joint.normal);\n                }\n            }\n            for (var key in joints) {\n                joint = joints[key];\n                joint.position.copy(getCentroid(joint.vertices));\n                joint.vertices = null;\n            }\n            if (!joints.left) {\n                joints.left = new THREE.Group();\n                joints.left.position.set(-size.x / 2, 0, 0);\n                joints.left.normal = new THREE.Vector3(-1, 0, 0);\n                joints.left.c = colors[0];\n            }\n            if (!joints.right) {\n                joints.right = new THREE.Group();\n                joints.right.position.set(size.x / 2, 0, 0);\n                joints.right.normal = new THREE.Vector3(1, 0, 0);\n                joints.right.c = colors[1];\n            }\n            // console.log('item.getJoints', joints, size);\n            return joints;\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                inner = item.inner;\n\n            var model = new THREE.Mesh(geometry, materials);\n            box.setFromObject(model);\n            box.getSize(size);\n\n            var joints = item.getJoints(geometry, materials, size);\n\n            // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);            \n            materials[1].color = new THREE.Color(0x000000);\n            var material;\n\n            model.geometry.uvsNeedUpdate = true;\n            model.geometry.normalsNeedUpdate = true;\n            model.geometry.verticesNeedUpdate = true;\n\n            // model.geometry.computeMorphNormals();\n            model.geometry.computeFaceNormals();\n            model.geometry.computeVertexNormals();\n            model.geometry.computeBoundingBox();\n\n            // console.log(model);\n\n            if (true) {\n                geometry = new THREE.BoxGeometry(size.x, size.y, size.z);\n                material = new THREE.MeshStandardMaterial({\n                    color: new THREE.Color(0.2 * ++I, 0, 0),\n                    wireframe: false,\n                    transparent: true,\n                    opacity: 0.1,\n                });\n                model = new THREE.Mesh(geometry, material);\n            }\n\n            model.position.set(size.x / 2, 0, 0);\n            for (var key in joints) {\n                var joint = joints[key];\n                // joint.quaternion.setFromAxisAngle(joint.normal, rad(90));\n                var x = joint.normal.x,\n                    y = joint.normal.y,\n                    z = -joint.normal.z;\n                /*\n                var rx = Math.atan2(y, z),\n                    ry = z >= 0 ? -Math.atan2(x * Math.cos(rx), z) : Math.atan2(x * Math.cos(rx), -z),\n                    rz = 0;\n                var rotation = new THREE.Euler(rx, ry, rz);\n                 */\n                var rotation = new THREE.Euler(\n                    0,\n                    Math.atan2(z, x),\n                    Math.atan2(y, Math.sqrt(x * x + z * z))\n                );\n                joint.rotation.copy(rotation);\n                // joint.lookAt(joint.normal);\n                // joint.rotateY(joint.normal.x * rad(90));\n                model.add(joint);\n                joint.oquaternion = new THREE.Quaternion().multiplyQuaternions(joint.quaternion, flipQuaternion);\n                if (true) {\n                    var s = size.x / 10;\n                    var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, joint.c, s / 2, s / 2);\n                    joint.arrow = arrow;\n                    joint.add(arrow);\n                }\n            }\n            /*\n            var left = item.getJoint(\n                new THREE.Vector3(-size.x / 2, 0, 0),\n                new THREE.Vector3(0, 0, -rad(180)), // + rad(10)\n                0x00ff00\n            );\n            var right = item.getJoint(\n                new THREE.Vector3(size.x / 2, 0, 0),\n                // new THREE.Vector3(0, 0, -rad(10) + rad(20) * Math.random()),\n                new THREE.Vector3(0, 0, rad(0)),\n                0xff0000\n            );\n            inner.scale.set(SCALE, SCALE, SCALE);\n            model.add(left);\n            model.add(right);\n            inner.add(model);\n            group.add(inner);\n            // new items\n            item.model = model;\n            item.left = left;\n            item.lquaternion = new THREE.Quaternion().multiplyQuaternions(left.quaternion, flipQuaternion);\n            item.right = right;\n            item.rquaternion = right.quaternion; // not flipped cause already in opposite direction\n            */\n            inner.scale.set(SCALE, SCALE, SCALE);\n            inner.add(model);\n            group.add(inner);\n            item.model = model;\n            item.joints = joints;\n        }\n\n        function getJoint(origin, rotation, color) {\n            var item = this,\n                size = item.size;\n            // rotation.normalize();\n            var helper = new THREE.Group();\n            helper.position.copy(origin);\n            helper.rotation.x = rotation.x;\n            helper.rotation.y = rotation.y;\n            helper.rotation.z = rotation.z;\n            var oppositeQuaternion = new THREE.Quaternion();\n            oppositeQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), rad(180));\n            helper.oppositeQuaternion = new THREE.Quaternion().multiplyQuaternions(oppositeQuaternion, helper.quaternion);\n            if (DEBUG) {\n                var s = size.x / 10;\n                var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, color, s / 2, s / 2);\n                helper.arrow = arrow;\n                helper.add(arrow);\n            }\n            return helper;\n        }\n\n        function flip(callback) {\n            var item = this,\n                model = item.model;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            TweenLite.to(model.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    // item.group.updateMatrixWorld();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            return item;\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function __combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, right;\n\n            function combineItem(item, i) {\n                // item.inner.position.x += (0 - item.inner.position.x) / 5;\n                if (item.flipped) {\n                    lquaternion = item.rquaternion;\n                    right = item.left;\n                } else {\n                    lquaternion = item.lquaternion;\n                    right = item.right;\n                }\n                if (i > 0) {\n                    item.group.position.copy(previousPosition.sub(groupPosition));\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.model.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, right;\n\n            function combineItem(item, i) {\n                // item.inner.position.x += (0 - item.inner.position.x) / 5;\n                if (item.flipped) {\n                    lquaternion = item.joints.right.quaternion;\n                    right = item.joints.left;\n                } else {\n                    lquaternion = item.joints.left.oquaternion;\n                    right = item.joints.right;\n                }\n                if (i > 0) {\n                    item.group.position.copy(previousPosition.sub(groupPosition));\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.model.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.inner.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        floor.position.x = combiner.center.x;\n        floor.position.z = combiner.center.z;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.inner.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.inner.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}