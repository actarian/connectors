{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","i","data","model","parse","JSON","geometry","materials","DEBUG_HELPER","DEBUG_ANGLE","DEBUG_ARROW","DEBUG_MODELS","RAD","PI","SCALE","I","Object3D","getOppositeQuaternion","rotation","toVector3","multiplyScalar","quaternion","Quaternion","setFromAxisAngle","flipQuaternion","Vector3","CombinerItem","item","size","box","Box3","group","Group","outer","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","v","vertices","z","Mesh","setFromObject","getSize","joints","getJoints","unflipped","clone","material","diffq","setFromUnitVectors","normal","right","flipped","multiplyQuaternions","multiply","inverse","computeVertexNormals","verticesNeedUpdate","uvsNeedUpdate","color","Color","BoxGeometry","MeshStandardMaterial","wireframe","transparent","opacity","key","joint","Euler","atan2","copy","add","oquaternion","s","arrow","ArrowHelper","c","set","flip","animation","pow","onUpdate","slerp","onComplete","face","ids","names","colors","map","index","indexOf","faces","String","materialIndex","push","a","b","reduce","divideScalar","origin","setFlip","updateMatrixWorld","console","log","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","adjust","combine","fit","previousQuaternion","nextQuaternion","previousPosition","nextPosition","groupPosition","getWorldPosition","filter","localToWorld","worldToLocal","getWorldQuaternion","setRotationFromQuaternion","sub","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","object","pop","parent","remove","splice","select","emissive","update","DEBUG","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","distanceTo","vfrom","vto","qfrom","qto","lerpVectors","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","antialias","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","helper","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        var i = 0;\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: i % 2 === 0 ? 'img/Curved Body 1.js' : 'img/Angled Emitter 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n            i++;\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var DEBUG_HELPER = false;\n    var DEBUG_ANGLE = false;\n    var DEBUG_ARROW = true;\n    var DEBUG_MODELS = true;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    THREE.Object3D.prototype.getOppositeQuaternion = function () {\n        var rotation = this.rotation.toVector3().multiplyScalar(-1);\n        // console.log('rotation', this.rotation);\n        // var euler = new THREE.Euler(rotation, 'XYZ');\n        // console.log('euler', euler);\n        var quaternion = new THREE.Quaternion();\n        // quaternion.setFromEuler(euler);\n        quaternion.setFromAxisAngle(rotation, Math.PI);\n        return quaternion;\n    };\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.outer = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            getJoints: getJoints,\n            setFlip: setFlip,\n        };\n\n        function enter() {\n            var item = this;\n            item.outer.position.x = item.size.x;\n            TweenLite.to(item.outer.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function getCentroid(vertices) {\n            var center = vertices.reduce(function (a, b) {\n                return {\n                    x: a.x + b.x,\n                    y: a.y + b.y,\n                    z: a.z + b.z\n                };\n            });\n            return new THREE.Vector3().add(center).divideScalar(vertices.length);\n        }\n\n        function getJoints(geometry, materials, size) {\n            var joints = {},\n                ids = {},\n                /*\n                diffs = [\n                    new THREE.Vector3(-size.x / 2, 0, 0), // left\n                    new THREE.Vector3(size.x / 2, 0, 0), // right\n                    new THREE.Vector3(0, -size.y / 2, 0), // top\n                    new THREE.Vector3(0, size.y / 2, 0), // bottom\n                ],\n                */\n                names = ['left', 'right', 'top', 'bottom'],\n                colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00],\n                index, joint, face;\n            materials.map(function (material, index) {\n                // console.log(material);\n                var i = names.indexOf(material.name);\n                if (i !== -1) {\n                    var joint = new THREE.Group();\n                    // joint.diff = diffs[i];\n                    joint.name = names[i];\n                    joint.c = colors[i];\n                    joint.vertices = [];\n                    joints[material.name] = joint;\n                    ids[index] = joint;\n                }\n            });\n            for (var i = 0; i < geometry.faces.length; i++) {\n                face = geometry.faces[i];\n                joint = ids[String(face.materialIndex)];\n                if (joint) {\n                    joint.normal = joint.normal || face.normal; // assume all faces point toward direction;\n                    joint.vertices.push(geometry.vertices[face.a]);\n                    joint.vertices.push(geometry.vertices[face.b]);\n                    joint.vertices.push(geometry.vertices[face.c]);\n                    // console.log(joint.name, joint.normal);\n                }\n            }\n            for (var key in joints) {\n                joint = joints[key];\n                joint.position.copy(getCentroid(joint.vertices));\n                joint.origin = joint.position.clone();\n                // joint.diff.sub(joint.position);\n                joint.vertices = null;\n            }\n            if (!joints.left) {\n                joints.left = new THREE.Group();\n                joints.left.position.set(-size.x / 2, 0, 0);\n                joints.left.origin = joint.position.clone();\n                joints.left.normal = new THREE.Vector3(-1, 0, 0);\n                joints.left.c = colors[0];\n            }\n            if (!joints.right) {\n                joints.right = new THREE.Group();\n                joints.right.position.set(size.x / 2, 0, 0);\n                joints.right.origin = joint.position.clone();\n                joints.right.normal = new THREE.Vector3(1, 0, 0);\n                joints.right.c = colors[1];\n            }\n            if (DEBUG_ANGLE) {\n                joints.right.normal.y += 0.2;\n            }\n            // console.log('item.getJoints', joints, size);\n            return joints;\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                outer = item.outer,\n                inner = item.inner;\n\n            for (var v = 0; v < geometry.vertices.length; v++) {\n                geometry.vertices[v].x *= SCALE;\n                geometry.vertices[v].y *= SCALE;\n                geometry.vertices[v].z *= SCALE;\n            }\n\n            var model = new THREE.Mesh(geometry, materials);\n            box.setFromObject(model);\n            box.getSize(size);\n\n            var joints = item.getJoints(geometry, materials, size);\n\n            model.unflipped = model.quaternion.clone();\n            // model.flipped = new THREE.Quaternion().setFromUnitVectors(joints.left.normal, joints.right.normal);\n            var diffq = new THREE.Quaternion().setFromUnitVectors(joints.left.normal.clone().multiplyScalar(-1), joints.right.normal);\n            model.flipped = new THREE.Quaternion().multiplyQuaternions(model.unflipped, flipQuaternion).multiply(diffq.inverse());\n\n            var material;\n\n            model.geometry.computeVertexNormals();\n            model.geometry.verticesNeedUpdate = true;\n            model.geometry.uvsNeedUpdate = true;\n\n            // model.geometry.mergeVertices();\n\n            // model.geometry.computeFaceNormals();\n\n            // model.geometry.normalsNeedUpdate = true;\n            // model.geometry.uvsNeedUpdate = true;\n\n            // model.geometry.computeMorphNormals();\n            /*            model.geometry.computeFaceNormals();\n                        model.geometry.computeVertexNormals();\n                        model.geometry.computeBoundingBox();\n            */\n            // console.log(model);\n\n            if (DEBUG_MODELS) {\n                // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);            \n                materials[1].color = new THREE.Color(0x000000);\n                geometry = new THREE.BoxGeometry(size.x, size.y, size.z);\n                material = new THREE.MeshStandardMaterial({\n                    color: new THREE.Color(0.2 * ++I, 0, 0),\n                    wireframe: false,\n                    transparent: false,\n                    opacity: 1.0,\n                });\n                model = new THREE.Mesh(geometry, material);\n            }\n\n            for (var key in joints) {\n                var joint = joints[key];\n                var x = joint.normal.x,\n                    y = joint.normal.y,\n                    z = -joint.normal.z;\n                var rotation = new THREE.Euler(\n                    0,\n                    Math.atan2(z, x),\n                    Math.atan2(y, Math.sqrt(x * x + z * z))\n                );\n                joint.rotation.copy(rotation);\n                model.add(joint);\n                joint.oquaternion = new THREE.Quaternion().multiplyQuaternions(joint.quaternion, flipQuaternion);\n                if (DEBUG_ARROW) {\n                    var s = size.x / 10;\n                    var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, joint.c, s / 2, s / 2);\n                    // var q = joint.getOppositeQuaternion();\n                    // console.log('q', q);\n                    // arrow.setRotationFromQuaternion(q);\n                    joint.arrow = arrow;\n                    joint.add(arrow);\n                }\n            }\n            inner.position.set(size.x / 2, 0, 0);\n            inner.add(model);\n            outer.add(inner);\n            group.add(outer);\n            item.joints = joints;\n            item.model = model;\n        }\n\n        function setFlip() {\n            var item = this,\n                model = item.model;\n            var position = new THREE.Vector3();\n            if (item.flipped) {\n                // model.quaternion.copy(item.joints.right.quaternion.conjugate());\n                // item.joints.right.localToWorld(position);\n                // item.pivot.worldToLocal(position);\n                // item.model.setRotationFromQuaternion(item.joints.right.quaternion.conjugate());\n                // item.model.position.set(0, 0, 0).sub(item.joints.right.origin);\n                // position.x -= item.size.x / 2;\n                // item.model.quaternion.setFromUnitVectors(item.joints.left.normal, item.joints.right.normal);\n            } else {\n                // model.quaternion.copy(item.joints.left.quaternion.conjugate());\n                // item.joints.left.localToWorld(position);\n                // item.pivot.worldToLocal(position);\n                // item.model.setRotationFromQuaternion(item.joints.left.quaternion.conjugate());\n                // item.model.position.set(0, 0, 0).sub(item.joints.left.origin);\n                // position.x += item.size.x / 2;\n                // item.model.setRotationFromQuaternion(new THREE.Quaternion());\n            }\n            item.model.updateMatrixWorld();\n            console.log('setFlip', item.flipped, item.joints.left.quaternion);\n        }\n\n        function flip(callback) {\n            var item = this,\n                inner = item.inner;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            var animation = {\n                pow: item.flipped ? 0 : 1\n            };\n            TweenLite.to(animation, 0.3, {\n                pow: item.flipped ? 1 : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    THREE.Quaternion.slerp(item.model.unflipped, item.model.flipped, item.model.quaternion, animation.pow);\n                },\n                onComplete: function () {\n                    // console.log('flipped');\n                    // item.setFlip();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n            /*\n            TweenLite.to(inner.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    item.setFlip();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n            */\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG_HELPER) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            item.setFlip();\n            return item;\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var nextPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, left, right;\n\n            function combineItem(item, i) {\n                if (item.flipped) {\n                    lquaternion = item.joints.right.quaternion;\n                    left = item.joints.right;\n                    right = item.joints.left;\n                } else {\n                    lquaternion = item.joints.left.oquaternion;\n                    left = item.joints.left;\n                    right = item.joints.right;\n                }\n                if (i > 0) {\n                    nextPosition = left.position.clone();\n                    item.model.localToWorld(nextPosition);\n                    item.group.worldToLocal(nextPosition);\n                    // console.log('left.position', nextPosition);\n\n                    // item.group.position.set(0, 0, 0);\n                    left.getWorldQuaternion(nextQuaternion);\n                    item.group.setRotationFromQuaternion(previousQuaternion);\n\n                    item.group.position.copy(previousPosition);\n                    item.group.position.sub(nextPosition);\n                    /*\n                    previousPosition.sub(groupPosition);\n                    item.group.position.copy(previousPosition);\n                    // item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.setRotationFromQuaternion(previousQuaternion);\n                    */\n                    item.group.updateMatrixWorld();\n                } else {\n                    item.group.rotation.z = rad(30);\n                }\n                /*\n                if (i === 1) {\n                    item.outer.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.outer.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n        antialias: true,\n    });\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        floor.position.x = combiner.center.x;\n        floor.position.z = combiner.center.z;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.outer.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.outer.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}