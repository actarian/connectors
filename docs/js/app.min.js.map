{"version":3,"sources":["docs/js/app.js"],"names":["Element","prototype","hasClass","name","RegExp","test","this","className","addClass","removeClass","split","join","replace","isDescendant","target","node","parentNode","getBounds","bounds","x","y","width","offsetWidth","height","offsetHeight","center","window","getTouch","e","t","THREE","Vector2","relativeTo","rect","getBoundingClientRect","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","left","top","pinchSize","Math","sqrt","count","type","touch","second","touches","originalEvent","changedTouches","length","pageX","pageY","Forge","loader","JSONLoader","load","callback","service","options","o","method","responseType","url","onload","p","req","XMLHttpRequest","open","status","response","onerror","onprogress","send","http","i","data","model","parse","JSON","geometry","materials","DEBUG_HELPER","DEBUG_ANGLE","DEBUG_ARROW","DEBUG_MODELS","SCALE","PI","I","flipQuaternion","Quaternion","setFromAxisAngle","Vector3","CombinerItem","item","size","box","Box3","group","Group","outer","inner","init","enter","position","TweenLite","to","ease","Power2","easeOut","overwrite","v","vertices","z","Mesh","setFromObject","getSize","material","joints","getJoints","uvsNeedUpdate","normalsNeedUpdate","verticesNeedUpdate","computeFaceNormals","computeVertexNormals","computeBoundingBox","color","Color","BoxGeometry","MeshStandardMaterial","wireframe","transparent","opacity","key","joint","normal","rotation","Euler","atan2","copy","add","oquaternion","multiplyQuaternions","quaternion","s","arrow","ArrowHelper","c","set","flip","flipped","onComplete","setFlip","face","ids","names","colors","map","index","indexOf","faces","String","materialIndex","push","a","b","reduce","divideScalar","right","localToWorld","worldToLocal","sub","console","log","Combiner","scene","combiner","flipping","items","hittables","boxhelper","Box3Helper","centerhelper","MeshBasicMaterial","unselect","adjust","combine","fit","lquaternion","previousQuaternion","previousPosition","groupPosition","getWorldPosition","filter","setRotationFromQuaternion","multiply","updateMatrixWorld","getWorldQuaternion","getCenter","selection","flipItem","setTimeout","hitAndFlip","raycaster","hitted","intersectObjects","object","pop","parent","remove","splice","select","clone","emissive","update","DEBUG","RAD","Fitter","camera","controls","fitter","dummy","projector","Projector","rotate","distance","angle","endTarget","distanceMin","distanceMax","rotationAngle","dragAngle","zoom","pow","offset","up","lookAt","updateProjectionMatrix","toScreen","min","max","applyMatrix4","matrixWorldInverse","aspect","dim","sin","fov","normalize","multiplyScalar","distanceTo","vfrom","vto","qfrom","qto","animation","onUpdate","lerpVectors","slerp","w","innerWidth","h","innerHeight","screen","project","toWorld","world","unprojectVector","cos","MIN","Orbiter","orbiter","values","tween","friction","Detector","webgl","forge","container","querySelector","btnAdd","btnRemove","btnFlip","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","PerspectiveCamera","Scene","light","PointLight","helper","PointLightHelper","floor","GridHelper","down","Raycaster","moved","addEventListener","onDown","onMove","onUp","stopPropagation","preventDefault","event","abs","delta","wheelDelta","detail","onAdd","animate","requestAnimationFrame","render","addGetWebGLMessage","mx","startDragAngle","startDistance","setFromCamera","enabled","move","diff","selectedItem","removeEventListener"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    Element.prototype.hasClass = function (name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + name + \"(?:\\\\s+|$)\").test(this.className);\n    };\n\n    Element.prototype.addClass = function (name) {\n        if (!this.hasClass(name)) {\n            this.className = this.className ? (this.className + ' ' + name) : name;\n        }\n    };\n\n    Element.prototype.removeClass = function (name) {\n        if (this.hasClass(name)) {\n            this.className = this.className.split(name).join('').replace(/\\s\\s+/g, ' '); // .replace(new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)', 'g'), '');\n        }\n    };\n\n    Element.prototype.isDescendant = function (target) {\n        function isDescendant(node, target) {\n            if (node === target) {\n                return true;\n            } else if (node.parentNode) {\n                return isDescendant(node.parentNode, target);\n            } else {\n                return false;\n            }\n        }\n        return isDescendant(this, target);\n    };\n\n    Element.prototype.getBounds = function () {\n        var bounds = {\n            x: 0,\n            y: 0,\n            width: this.offsetWidth,\n            height: this.offsetHeight,\n            center: {\n                x: 0,\n                y: 0\n            },\n        };\n        bounds.center.x = bounds.width / 2;\n        bounds.center.y = bounds.height / 2;\n        return bounds;\n    };\n\n    window.getTouch = function (e) {\n        var t = new THREE.Vector2();\n        t.t = new THREE.Vector2();\n        t.relativeTo = function (node) {\n            var rect = node.getBoundingClientRect();\n            var scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n            var scrollY = window.pageYOffset || document.documentElement.scrollTop;\n            this.x = ((this.x - rect.left - scrollX) / node.offsetWidth) * 2 - 1;\n            this.y = -((this.y - rect.top - scrollY) / node.offsetHeight) * 2 + 1;\n        };\n        t.pinchSize = function () {\n            return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n        };\n        t.count = 1;\n        /*\n        var t = {\n            x: 0,\n            y: 0,\n            t: {\n                x: 0,\n                y: 0,\n            },\n            count: 1,\n            dist: function () {\n                return Math.sqrt((this.x - this.t.x) * (this.x - this.t.x) + (this.y - this.t.y) * (this.y - this.t.y));\n            }\n        };\n        */\n        if (e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel') {\n            var touch = null,\n                second = null;\n            var touches = e.originalEvent ? e.originalEvent.touches || e.originalEvent.changedTouches : e.touches || e.changedTouches;\n            if (touches && touches.length) {\n                touch = touches[0];\n                if (touches.length > 1) {\n                    second = touches[1];\n                }\n            }\n            if (touch) {\n                t.x = touch.pageX;\n                t.y = touch.pageY;\n            }\n            if (second) {\n                t.t.x = second.pageX;\n                t.t.y = second.pageY;\n                t.count = 2;\n            }\n        } else if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover' || e.type == 'mouseout' || e.type == 'mouseenter' || e.type == 'mouseleave') {\n            t.x = e.pageX;\n            t.y = e.pageY;\n        }\n        return t;\n    };\n\n}());\n/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var Forge = function () {\n\n        function Forge() {\n            var service = this;\n            service.loader = new THREE.JSONLoader();\n        }\n\n        Forge.prototype = {\n            load: load,\n        };\n\n        var i = 0;\n\n        function load(callback) {\n            var service = this;\n            http({\n                url: i % 2 === 0 ? 'img/Curved Body 1.js' : 'img/Angled Emitter 1.js',\n                onload: function (data) {\n                    data = data.replace(new RegExp('transparency', 'g'), 'opacity');\n                    var model = service.loader.parse(JSON.parse(data));\n                    callback(model.geometry, model.materials);\n                }\n            });\n            i++;\n        }\n\n        function http(options) {\n            var o = {\n                method: 'GET',\n                responseType: 'text',\n            };\n            if (!options || !options.url || !options.onload) {\n                return;\n            }\n            for (var p in options) {\n                o[p] = options[p];\n            }\n            var req = new XMLHttpRequest();\n            req.open(o.method, o.url, true);\n            req.responseType = o.responseType; // 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    // var blob = this.response;\n                    // var image = URL.createObjectURL(blob); // IE10+\n                    o.onload(this.response);\n                }\n            };\n            if (o.onerror) {\n                req.onerror = o.onerror;\n            }\n            if (o.onprogress) {\n                req.onerror = o.onprogress;\n            }\n            req.send();\n        }\n\n        return Forge;\n\n    }();\n\n    window.Forge = Forge;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var DEBUG_HELPER = false;\n    var DEBUG_ANGLE = false;\n    var DEBUG_ARROW = true;\n    var DEBUG_MODELS = true;\n    var RAD = Math.PI / 180;\n    var SCALE = 0.025;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var flipQuaternion = new THREE.Quaternion();\n    flipQuaternion.setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.PI);\n\n    var CombinerItem = function () {\n\n        function CombinerItem(geometry, materials) {\n            var item = this;\n            item.size = new THREE.Vector3();\n            item.box = new THREE.Box3();\n            item.group = new THREE.Group();\n            item.outer = new THREE.Group();\n            item.inner = new THREE.Group();\n            item.init(geometry, materials);\n        }\n\n        CombinerItem.prototype = {\n            enter: enter,\n            init: init,\n            flip: flip,\n            getJoints: getJoints,\n            setFlip: setFlip,\n        };\n\n        function enter() {\n            var item = this;\n            item.outer.position.x = item.size.x;\n            TweenLite.to(item.outer.position, 0.6, {\n                x: 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut, \n            });\n        }\n\n        function getCentroid(vertices) {\n            var center = vertices.reduce(function (a, b) {\n                return {\n                    x: a.x + b.x,\n                    y: a.y + b.y,\n                    z: a.z + b.z\n                };\n            });\n            return new THREE.Vector3().add(center).divideScalar(vertices.length);\n        }\n\n        function getJoints(geometry, materials, size) {\n            var joints = {},\n                ids = {},\n                /*\n                diffs = [\n                    new THREE.Vector3(-size.x / 2, 0, 0), // left\n                    new THREE.Vector3(size.x / 2, 0, 0), // right\n                    new THREE.Vector3(0, -size.y / 2, 0), // top\n                    new THREE.Vector3(0, size.y / 2, 0), // bottom\n                ],\n                */\n                names = ['left', 'right', 'top', 'bottom'],\n                colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00],\n                index, joint, face;\n            materials.map(function (material, index) {\n                // console.log(material);\n                var i = names.indexOf(material.name);\n                if (i !== -1) {\n                    var joint = new THREE.Group();\n                    // joint.diff = diffs[i];\n                    joint.name = names[i];\n                    joint.c = colors[i];\n                    joint.vertices = [];\n                    joints[material.name] = joint;\n                    ids[index] = joint;\n                }\n            });\n            for (var i = 0; i < geometry.faces.length; i++) {\n                face = geometry.faces[i];\n                joint = ids[String(face.materialIndex)];\n                if (joint) {\n                    joint.normal = joint.normal || face.normal; // assume all faces point toward direction;\n                    joint.vertices.push(geometry.vertices[face.a]);\n                    joint.vertices.push(geometry.vertices[face.b]);\n                    joint.vertices.push(geometry.vertices[face.c]);\n                    // console.log(joint.name, joint.normal);\n                }\n            }\n            for (var key in joints) {\n                joint = joints[key];\n                joint.position.copy(getCentroid(joint.vertices));\n                // joint.diff.sub(joint.position);\n                joint.vertices = null;\n            }\n            if (!joints.left) {\n                joints.left = new THREE.Group();\n                joints.left.position.set(-size.x / 2, 0, 0);\n                joints.left.normal = new THREE.Vector3(-1, 0, 0);\n                joints.left.c = colors[0];\n            }\n            if (!joints.right) {\n                joints.right = new THREE.Group();\n                joints.right.position.set(size.x / 2, 0, 0);\n                joints.right.normal = new THREE.Vector3(1, 0, 0);\n                joints.right.c = colors[1];\n            }\n            if (DEBUG_ANGLE) {\n                joints.right.normal.y += 0.2;\n            }\n            // console.log('item.getJoints', joints, size);\n            return joints;\n        }\n\n        function init(geometry, materials) {\n            var item = this,\n                box = item.box,\n                size = item.size,\n                group = item.group,\n                outer = item.outer,\n                inner = item.inner;\n\n            for (var v = 0; v < geometry.vertices.length; v++) {\n                geometry.vertices[v].x *= SCALE;\n                geometry.vertices[v].y *= SCALE;\n                geometry.vertices[v].z *= SCALE;\n            }\n\n            var model = new THREE.Mesh(geometry, materials);\n            box.setFromObject(model);\n            box.getSize(size);\n\n            var joints = item.getJoints(geometry, materials, size);\n\n            var material;\n\n            model.geometry.uvsNeedUpdate = true;\n            model.geometry.normalsNeedUpdate = true;\n            model.geometry.verticesNeedUpdate = true;\n\n            // model.geometry.computeMorphNormals();\n            model.geometry.computeFaceNormals();\n            model.geometry.computeVertexNormals();\n            model.geometry.computeBoundingBox();\n\n            // console.log(model);\n\n            if (DEBUG_MODELS) {\n                // geometry = new THREE.CylinderGeometry(2, 2, 10, 10);            \n                materials[1].color = new THREE.Color(0x000000);\n                geometry = new THREE.BoxGeometry(size.x, size.y, size.z);\n                material = new THREE.MeshStandardMaterial({\n                    color: new THREE.Color(0.2 * ++I, 0, 0),\n                    wireframe: false,\n                    transparent: false,\n                    opacity: 1.0,\n                });\n                model = new THREE.Mesh(geometry, material);\n            }\n\n            for (var key in joints) {\n                var joint = joints[key];\n                var x = joint.normal.x,\n                    y = joint.normal.y,\n                    z = -joint.normal.z;\n                var rotation = new THREE.Euler(\n                    0,\n                    Math.atan2(z, x),\n                    Math.atan2(y, Math.sqrt(x * x + z * z))\n                );\n                joint.rotation.copy(rotation);\n                model.add(joint);\n                joint.oquaternion = new THREE.Quaternion().multiplyQuaternions(joint.quaternion, flipQuaternion);\n                if (DEBUG_ARROW) {\n                    var s = size.x / 10;\n                    var arrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(), s, joint.c, s / 2, s / 2);\n                    joint.arrow = arrow;\n                    joint.add(arrow);\n                }\n            }\n            inner.position.set(size.x / 2, 0, 0);\n            inner.add(model);\n            outer.add(inner);\n            group.add(outer);\n            item.joints = joints;\n            item.model = model;\n        }\n\n        function setFlip() {\n            var item = this,\n                model = item.model;\n            var position = new THREE.Vector3();\n            if (item.flipped) {\n                // model.quaternion.copy(item.joints.right.oquaternion);\n                item.joints.right.localToWorld(position);\n                item.inner.worldToLocal(position);\n                position.x -= item.size.x / 2;\n            } else {\n                // model.quaternion.copy(item.joints.left.oquaternion);\n                item.joints.left.localToWorld(position);\n                item.inner.worldToLocal(position);\n                position.x += item.size.x / 2;\n            }\n            item.model.position.sub(position);\n            console.log('position', position);\n        }\n\n        function flip(callback) {\n            var item = this,\n                inner = item.inner;\n            // console.log('flip()');\n            item.flipped = !item.flipped;\n            TweenLite.to(inner.rotation, 0.3, {\n                y: item.flipped ? Math.PI : 0,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                // onUpdate: function() { },\n                onComplete: function () {\n                    // console.log('flipped');\n                    item.setFlip();\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                },\n            });\n        }\n\n        return CombinerItem;\n\n    }();\n\n    var Combiner = function () {\n\n        function Combiner(scene) {\n            var combiner = this;\n            combiner.scene = scene;\n            combiner.flipping = 0;\n            combiner.items = [];\n            combiner.hittables = [];\n            combiner.center = new THREE.Vector3();\n            combiner.size = new THREE.Vector3();\n            combiner.group = new THREE.Group();\n            combiner.box = new THREE.Box3();\n            combiner.boxhelper = new THREE.Box3Helper(combiner.box, 0xff0000);\n            combiner.centerhelper = new THREE.Mesh(\n                new THREE.BoxGeometry(0.3, 0.3, 0.3),\n                new THREE.MeshBasicMaterial({\n                    color: 0xff0000\n                })\n            );\n            if (DEBUG_HELPER) {\n                combiner.scene.add(combiner.boxhelper);\n                combiner.scene.add(combiner.centerhelper);\n            }\n        }\n\n        Combiner.prototype = {\n            add: add,\n            adjust: adjust,\n            combine: combine,\n            fit: fit,\n            flip: flip,\n            flipItem: flipItem,\n            hitAndFlip: hitAndFlip,\n            pop: pop,\n            remove: remove,\n            select: select,\n            unselect: unselect,\n            update: update,\n        };\n\n        function update() {\n            var combiner = this,\n                group = combiner.group;\n            if (combiner.flipping === 0) {\n                // combiner.combine();\n                combiner.fit(group);\n            }\n        }\n\n        function adjust() {\n            var combiner = this,\n                group = combiner.group;\n            combiner.combine();\n            combiner.fit(group);\n            // combiner.fitCamera();\n        }\n\n        function add(geometry, materials) {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n\n            combiner.unselect();\n            var item = new CombinerItem(geometry, materials);\n            items.push(item);\n            combiner.hittables = items.map(function (item) {\n                return item.model;\n            });\n            group.add(item.group);\n            combiner.adjust();\n            item.setFlip();\n            return item;\n        }\n\n        function remove() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (combiner.selection) {\n                var selection = combiner.selection;\n                var item = selection.item;\n                items.splice(selection.index, 1);\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.unselect();\n                combiner.adjust();\n                if (items.length > selection.index) {\n                    items[selection.index].enter();\n                }\n                return item;\n            } else {\n                return combiner.pop();\n            }\n        }\n\n        function pop() {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables,\n                group = combiner.group;\n            if (items.length) {\n                var item = items.pop();\n                if (item.group.parent) {\n                    group.remove(item.group);\n                }\n                combiner.hittables = items.map(function (item) {\n                    return item.model;\n                });\n                combiner.adjust();\n                return item;\n            }\n        }\n\n        function combine() {\n            var combiner = this,\n                items = combiner.items,\n                group = combiner.group;\n            var previousQuaternion = new THREE.Quaternion();\n            var nextQuaternion = new THREE.Quaternion();\n            var previousPosition = new THREE.Vector3();\n            var groupPosition = new THREE.Vector3();\n            var lquaternion, left, right;\n\n            function combineItem(item, i) {\n                if (item.flipped) {\n                    lquaternion = item.joints.right.quaternion;\n                    left = item.joints.right;\n                    right = item.joints.left;\n                } else {\n                    lquaternion = item.joints.left.oquaternion;\n                    left = item.joints.left;\n                    right = item.joints.right;\n                }\n                if (i > 0) {\n                    previousPosition.sub(groupPosition);\n                    item.group.position.copy(previousPosition);\n                    item.group.setRotationFromQuaternion(previousQuaternion.multiply(lquaternion));\n                    item.group.updateMatrixWorld();\n                }\n                /*\n                if (i === 1) {\n                    item.outer.rotation.x += 0.01;\n                }\n                */\n                right.getWorldQuaternion(previousQuaternion);\n                right.getWorldPosition(previousPosition);\n            }\n            if (items.length) {\n                group.getWorldPosition(groupPosition);\n                items.filter(combineItem);\n            }\n        }\n\n        function fit() {\n            var combiner = this,\n                box = combiner.box,\n                size = combiner.size,\n                center = combiner.center,\n                centerhelper = combiner.centerhelper,\n                group = combiner.group;\n            box.setFromObject(group);\n            box.getCenter(center);\n            box.getSize(size);\n            centerhelper.position.copy(center);\n            /*\n            group.worldToLocal(center);\n            group.position.x = -center.x;\n            group.position.y = -center.y;\n            group.position.z = -center.z;\n            */\n            return size;\n        }\n\n        function select(raycaster) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            combiner.unselect();\n            var hitted = raycaster.intersectObjects(hittables);\n            var selection = null;\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                var rotation = item.outer.rotation.clone();\n                item.model.material.emissive = new THREE.Color(0x888888);\n                // item.model.material.needsUpdate = true;\n                selection = {\n                    index: index,\n                    item: item,\n                    rotation: rotation,\n                };\n                combiner.selection = selection;\n            }\n            return selection;\n        }\n\n        function unselect() {\n            var combiner = this;\n            if (combiner.selection) {\n                combiner.selection.item.model.material.emissive = new THREE.Color(0x000000);\n                // combiner.selection.item.model.material.needsUpdate = true;\n                combiner.selection = null;\n            }\n        }\n\n        function flipItem(item, callback) {\n            var combiner = this;\n            combiner.flipping++;\n            item.flip(function () {\n                combiner.flipping--;\n                combiner.adjust();\n                // combiner.unselect(); ???\n                if (typeof (callback) === 'function') {\n                    setTimeout(function () {\n                        callback();\n                    }, 100);\n                }\n            });\n        }\n\n        function flip(callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n            if (combiner.selection) {\n                combiner.flipItem(combiner.selection.item, callback);\n            }\n        }\n\n        function hitAndFlip(raycaster, callback) {\n            var combiner = this,\n                items = combiner.items,\n                hittables = combiner.hittables;\n\n            var hitted = raycaster.intersectObjects(hittables);\n            if (hitted.length) {\n                var index = hittables.indexOf(hitted[0].object);\n                var item = items[index];\n                combiner.flipItem(item, callback);\n            }\n        }\n\n        return Combiner;\n\n    }();\n\n    window.Combiner = Combiner;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = true;\n    var RAD = Math.PI / 180;\n    var I = 0;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Fitter = function () {\n\n        function Fitter(scene, camera, controls) {\n            var fitter = this;\n            fitter.scene = scene;\n            fitter.camera = camera;\n            fitter.dummy = camera.clone();\n            fitter.controls = controls;\n            fitter.projector = new THREE.Projector();\n            fitter.position = new THREE.Vector3();\n            fitter.target = new THREE.Vector3();\n            fitter.center = new THREE.Vector3();\n            fitter.size = new THREE.Vector3();\n            fitter.box = new THREE.Box3();\n            fitter.boxhelper = new THREE.Box3Helper(fitter.box, 0xff0000);\n\n            fitter.rotate = false;\n\n            fitter.target = new THREE.Vector3(0, 0, 0);\n            fitter.distance = 22;\n            fitter.angle = 0;\n\n            fitter.endTarget = new THREE.Vector3(0, 0, 0);\n            fitter.position = new THREE.Vector3(0, 0, 0);\n            fitter.distanceMin = 10;\n            fitter.distanceMax = 34;\n            fitter.rotationAngle = 1;\n            fitter.dragAngle = 0;\n            fitter.zoom = 1; // eliminabili ??\n            fitter.pow = 0; // eliminabili ??\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                fitter.pow = 1;\n            } else {\n                fitter.pow = 0;\n            }\n            */\n            if (DEBUG) {\n                fitter.scene.add(fitter.boxhelper);\n            }\n        }\n\n        Fitter.prototype = {\n            fit: fit,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            update: update,\n        };\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var fitter = this,\n                projector = fitter.projector,\n                box = fitter.box,\n                size = fitter.size,\n                center = fitter.center,\n                camera = fitter.camera,\n                controls = fitter.controls,\n                dummy = fitter.dummy;\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            dummy.position.copy(camera.position);\n            dummy.quaternion.copy(camera.quaternion);\n            dummy.up = up;\n            dummy.lookAt(center);\n            dummy.updateProjectionMatrix();\n            var min = fitter.toScreen(box.min);\n            var max = fitter.toScreen(box.max);\n            var sc = fitter.toScreen(center);\n            box.applyMatrix4(dummy.matrixWorldInverse);\n            box.getSize(size);\n            var aspect = size.x / size.y;\n            var dim = (camera.aspect > aspect) ? size.y : size.x;\n            if (camera.aspect < aspect) {\n                dim /= camera.aspect;\n            }\n            dim *= offset;\n            var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n            dummy.position.normalize().multiplyScalar(z);\n            fitter.distance = dummy.position.distanceTo(center);\n            // camera.far = distance + dim;\n            dummy.updateProjectionMatrix();\n            var vfrom = camera.position.clone();\n            var vto = dummy.position;\n            var qfrom = camera.quaternion.clone();\n            var qto = dummy.quaternion;\n            var animation = {\n                pow: 0,\n            };\n            TweenLite.to(animation, 0.6, {\n                pow: 1,\n                ease: Power2.easeOut,\n                overwrite: 'all',\n                // ease: Elastic.easeOut,\n                onUpdate: function () {\n                    camera.position.lerpVectors(vfrom, vto, animation.pow);\n                    THREE.Quaternion.slerp(qfrom, qto, camera.quaternion, animation.pow);\n                    camera.updateProjectionMatrix();\n                },\n                onComplete: function () {\n                    if (controls) {\n                        // controls.maxDistance = distance + dim;\n                        controls.target.copy(center);\n                        controls.update();\n                    }\n                }\n            });\n        }\n\n        function toWorld(v) {\n            var fitter = this,\n                projector = fitter.projector,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var fitter = this,\n                camera = fitter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        function update() {\n            var fitter = this,\n                target = fitter.target,\n                endTarget = fitter.endTarget,\n                position = fitter.position,\n                distance = fitter.distance,\n                zoom = fitter.zoom,\n                dragAngle = fitter.dragAngle,\n                rotationAngle = fitter.rotationAngle,\n                pow = fitter.pow,\n                camera = fitter.camera;\n            if (fitter.rotate) {\n                rotationAngle = fitter.rotationAngle += 0.0002;\n            }\n\n            target.x += (endTarget.x - target.x) / 40;\n            target.y += (endTarget.y - target.y) / 40;\n            target.z += (endTarget.z - target.z) / 40;\n\n            position.x = target.x + distance * zoom * Math.cos(dragAngle + rotationAngle);\n            position.y = target.y + distance * zoom; // * (0.5 + 1.5 * (1 - pow));\n            position.z = target.z + distance * zoom * Math.sin(dragAngle + rotationAngle);\n\n            camera.position.x += (position.x - camera.position.x) / 13;\n            camera.position.y += (position.y - camera.position.y) / 13;\n            camera.position.z += (position.z - camera.position.z) / 13;\n            // camera.up = new THREE.Vector3(0, 0, -1);\n\n            camera.lookAt(target);\n        }\n\n        return Fitter;\n\n    }();\n\n    window.Fitter = Fitter;\n\n}());\n/* global window, document, console, TweenLite */\n\n(function () {\n    'use strict';\n\n    var DEBUG = false;\n    var RAD = Math.PI / 180;\n    var I = 0;\n    var MIN = 11;\n\n    function rad(degree) {\n        return degree * RAD;\n    }\n\n    var Orbiter = function () {\n\n        function Orbiter(scene, camera, controls) {\n            var orbiter = this;\n            orbiter.scene = scene;\n            orbiter.camera = camera;\n            orbiter.dummy = camera.clone();\n            orbiter.controls = controls;\n            orbiter.projector = new THREE.Projector();\n            orbiter.center = new THREE.Vector3();\n            orbiter.size = new THREE.Vector3();\n            orbiter.box = new THREE.Box3();\n            orbiter.boxhelper = new THREE.Box3Helper(orbiter.box, 0xff0000);\n\n            orbiter.rotate = true;\n\n            orbiter.target = new THREE.Vector3(0, 0, 0);\n            orbiter.distance = MIN * 2;\n            orbiter.rotationAngle = 1;\n            orbiter.dragAngle = 0;\n            orbiter.zoom = 1; // eliminabili ??\n            orbiter.pow = 0; // eliminabili ??\n\n            orbiter.values = {\n                target: new THREE.Vector3(0, 0, 0),\n                distance: MIN * 2,\n                rotationAngle: 0,\n                dragAngle: 0,\n                zoom: 0,\n                pow: 0,\n            };\n\n            orbiter.distanceMin = MIN;\n            orbiter.distanceMax = MIN * 3;\n            /*\n            if (combiner.selected.item.type === APP.Parts.typeEnum.BladePlug) {\n                orbiter.pow = 1;\n            } else {\n                orbiter.pow = 0;\n            }\n            */\n            orbiter.set(orbiter.camera, orbiter.target);\n            //\n            if (DEBUG) {\n                orbiter.scene.add(orbiter.boxhelper);\n            }\n        }\n\n        Orbiter.prototype = {\n            fit: fit,\n            set: set,\n            toScreen: toScreen,\n            toWorld: toWorld,\n            tween: tween,\n            update: update,\n        };\n\n        function set(camera, target) {\n            var orbiter = this,\n                values = orbiter.values;\n\n            camera.position.x = target.x + values.distance * values.zoom * Math.cos(values.dragAngle + values.rotationAngle);\n            camera.position.y = target.y + values.distance * values.zoom; // * (0.5 + 1.5 * (1 - values.pow));\n            camera.position.z = target.z + values.distance * values.zoom * Math.sin(values.dragAngle + values.rotationAngle);\n            // camera.up = new THREE.Vector3(0, 0, -1);\n            camera.lookAt(target);\n        }\n\n        function fit(combiner, offset, up) {\n            if (!offset) {\n                offset = 1.3;\n            }\n            if (!up) {\n                up = new THREE.Vector3(0, 1, 0);\n            }\n            var orbiter = this,\n                projector = orbiter.projector,\n                box = orbiter.box,\n                size = orbiter.size,\n                center = orbiter.center,\n                camera = orbiter.camera,\n                controls = orbiter.controls,\n                dummy = orbiter.dummy;\n\n            var object = combiner.selection ? combiner.selection.item.group : combiner.group;\n            box.setFromObject(object);\n            box.getCenter(center);\n            box.getSize(size);\n            if (combiner.items.length > 0) {\n                orbiter.set(dummy, center);\n                /*\n                dummy.position.copy(camera.position);\n                dummy.quaternion.copy(camera.quaternion);\n                dummy.up = up;\n                dummy.lookAt(center);\n                */\n                dummy.fov = camera.fov;\n                dummy.aspect = camera.aspect;\n                /*\n                dummy.updateProjectionMatrix();\n                var min = orbiter.toScreen(box.min);\n                var max = orbiter.toScreen(box.max);\n                var sc = orbiter.toScreen(center);\n                */\n                // dummy.matrixWorldNeedsUpdate = true;\n                // dummy.matrixWorldInverse.getInverse(dummy.matrixWorld);\n                size.applyMatrix4(dummy.matrixWorldInverse);\n                var aspect = size.x / size.y;\n                var dim = (camera.aspect > aspect) ? size.y : size.x;\n                if (camera.aspect < aspect) {\n                    dim /= camera.aspect;\n                }\n                dim *= offset;\n                var z = dim / 2 / Math.sin(camera.fov / 2 * RAD);\n                orbiter.distance = z;\n            } else {\n                orbiter.distance = MIN;\n            }\n            orbiter.distanceMin = orbiter.distance * 0.5;\n            orbiter.distanceMax = orbiter.distance * 1.5;\n            //\n            orbiter.target.copy(center);\n        }\n\n        function tween() {\n            var orbiter = this,\n                target = orbiter.target,\n                values = orbiter.values;\n\n            if (orbiter.rotate) {\n                orbiter.rotationAngle += 0.0002;\n            }\n            var friction = 1 / 15;\n            values.target.x += (target.x - values.target.x) * friction;\n            values.target.y += (target.y - values.target.y) * friction;\n            values.target.z += (target.z - values.target.z) * friction;\n            values.distance += (orbiter.distance - values.distance) * friction;\n            values.rotationAngle += (orbiter.rotationAngle - values.rotationAngle) * friction;\n            values.dragAngle += (orbiter.dragAngle - values.dragAngle) * friction;\n            values.zoom += (orbiter.zoom - values.zoom) * friction;\n            values.pow += (orbiter.pow - values.pow) * friction;\n        }\n\n        function update() {\n            var orbiter = this;\n            orbiter.tween();\n            orbiter.set(orbiter.camera, orbiter.values.target);\n        }\n\n        function toWorld(v) {\n            var orbiter = this,\n                projector = orbiter.projector,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var world = v.clone();\n            world.x = world.x / w - 1;\n            world.y = -world.y / h + 1;\n            projector.unprojectVector(world, camera);\n            return world;\n        }\n\n        function toScreen(v) {\n            var orbiter = this,\n                camera = orbiter.camera,\n                w = window.innerWidth / 2,\n                h = window.innerHeight / 2;\n            var screen = v.clone();\n            screen.project(camera);\n            screen.x = (screen.x + 1) * w;\n            screen.y = (-screen.y + 1) * h;\n            return screen;\n        }\n\n        return Orbiter;\n\n    }();\n\n    window.Orbiter = Orbiter;\n\n}());\n/* global window, document, console, TweenLite, Forge, Combiner, Orbiter */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var forge = new Forge();\n\n    var container = document.querySelector('.editor');\n    var btnAdd = document.querySelector('.btn-add');\n    var btnRemove = document.querySelector('.btn-remove');\n    var btnFlip = document.querySelector('.btn-flip');\n\n    var renderer = new THREE.WebGLRenderer({\n        alpha: true,\n    });\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\n    container.appendChild(renderer.domElement);\n\n    var camera = new THREE.PerspectiveCamera(45, container.offsetWidth / container.offsetHeight, 1, 50000);\n    // camera.position.set(0, 20, 40);\n    // camera.lookAt(0, 0, 0);\n    // controls.update() must be called after any manual changes to the camera's transform\n    var controls;\n    // var controls = new THREE.OrbitControls(camera);\n    // controls.update();\n\n    var scene = new THREE.Scene();\n\n    var light = new THREE.PointLight(0xddddee, 1, 2000);\n    light.position.set(0, 200, 0);\n    scene.add(light);\n    var helper = new THREE.PointLightHelper(light, 10);\n    scene.add(helper);\n\n    var floor = addFloor();\n    scene.add(floor);\n\n    var combiner = new Combiner(scene);\n    scene.add(combiner.group);\n\n    var orbiter = new Orbiter(scene, camera, controls);\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // required if controls.enableDamping or controls.autoRotate are set to true\n        // controls.update();\n        renderer.render(scene, camera);\n        combiner.update();\n        floor.position.y = -combiner.size.y / 2;\n        floor.position.x = combiner.center.x;\n        floor.position.z = combiner.center.z;\n        orbiter.update();\n    }\n\n    function addFloor() {\n        /*\n        var radius = 200;\n        var radials = 16;\n        var circles = 8;\n        var divisions = 64;\n        var floor = new THREE.PolarGridHelper(radius, radials, circles, divisions);\n        */\n        var floor = new THREE.GridHelper(500, 500, 0x888888, 0xAAAAAA);\n        // floor.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ));\t\n        return floor;\n    }\n\n    function onResize() {\n        camera.aspect = container.offsetWidth / container.offsetHeight;\n        camera.updateProjectionMatrix();\n        orbiter.fit(combiner);\n        renderer.setSize(container.offsetWidth, container.offsetHeight);\n    }\n\n    /*\n    function getTouch(e) {\n        return new THREE.Vector2(\n            (e.clientX / container.offsetWidth) * 2 - 1, -(e.clientY / container.offsetHeight) * 2 + 1\n        );\n    }\n\n        var raycaster = new THREE.Raycaster();\n        // raycaster.ray.direction.set(0, -1, 0);\n        var mouse = new THREE.Vector2(0, 0);\n\n        var down = null, move = null, moved = 0, pinching = false;\n        \n    */\n\n    var moved = 0;\n\n    function onDown(e) {\n        down = getTouch(e);\n        down.relativeTo(container);\n        down.mx = down.x;\n        down.startDragAngle = orbiter.dragAngle;\n        down.startDistance = orbiter.distance;\n        // console.log('down', down);\n        raycaster.setFromCamera(down, camera);\n        var selection = combiner.select(raycaster);\n        // console.log('selection', selection);\n        if (selection) {\n            if (controls) {\n                controls.enabled = false;\n            }\n            down.index = selection.index;\n            down.item = selection.item;\n            down.rotation = selection.rotation;\n        }\n        orbiter.fit(combiner);\n        /*\n        down.index = i;\n        down.item = value;\n        down.angle = value.coords.angle;\n        */\n    }\n\n    function onMove(e) {\n        moved++;\n        var pow = 1; // 0.001;\n        if (e.type === 'touchmove') {\n            e.stopPropagation();\n            e.preventDefault();\n            pow *= 4;\n        }\n        if (down) {\n            var move = getTouch(e);\n            move.relativeTo(container);\n            var diff = move.sub(down);\n            // console.log(diff.x, diff.y);\n            if (move.count == 2 && down.count == 2) {\n                // PINCH                   \n                orbiter.distance = down.startDistance + (down.pinchSize() - move.pinchSize()) * pow * 10;\n            } else {\n                if (combiner.selection && combiner.selection.item === down.item) {\n                    // ROTATE ITEM\n                    // down.item.rotation = down.rotation + (move.y - down.y) * pow * 10;\n                    var index = down.index;\n                    // down.item.outer.rotation.x = down.rotation.x + diff.y * Math.PI;\n                    down.item.outer.rotation.x = down.rotation.x + diff.y * pow * 10;\n                    combiner.adjust();\n                } else {\n                    // DRAG CAMERA\n                    orbiter.dragAngle = down.startDragAngle + diff.x * pow * 10;\n                    orbiter.distance = down.startDistance + diff.y * pow * -10;\n                    /*\n                    // SOUND\n                    if (combiner.selectedItem && combiner.selectedItem.type == APP.Parts.typeEnum.Sound) {\n                        if (Math.abs(move.x - down.mx) > container.offsetWidth / 3) {\n                            down.mx = move.x;\n                            scope.$root.$broadcast('onSoundSwing', scope.saber.sound, Math.abs(move.x - down.mx) / 100);\n                        }\n                    }\n                    */\n                }\n            }\n            // orbiter.update();\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onUp(e) {\n        if (down && moved < 5) {\n            if (down.item) {\n                /*\n                scope.$apply(function () {\n                    selectedIndex = down.index;\n                    onFocus(down.item);\n                });\n                */\n            } else if (combiner.selectedItem) {\n                /*\n                scope.$apply(function () {\n                    onBlur();\n                });\n                */\n            }\n        }\n        down = null;\n        moved = 0;\n        if (controls) {\n            controls.enabled = true;\n        }\n        removeListeners();\n    }\n\n    function onWheel(e) {\n        e = window.event || e; // old IE support\n        var bounds = container.getBounds();\n        if (Math.abs(e.pageX - bounds.center.x) < bounds.width / 3) {\n            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n            orbiter.distance += delta;\n            orbiter.distance = Math.min(orbiter.distanceMax, Math.max(orbiter.distanceMin, orbiter.distance));\n            orbiter.update();\n            e.preventDefault();\n            // scope.$root.$broadcast('onControls');\n        }\n    }\n\n    function onDoubleClick(e) {\n        console.log('onDoubleClick');\n        var touch = getTouch(e);\n        raycaster.setFromCamera(touch, camera);\n        combiner.hitAndFlip(raycaster, function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onAdd() {\n        forge.load(function (geometry, materials) {\n            var item = combiner.add(geometry, materials);\n            orbiter.fit(combiner);\n            item.enter();\n        });\n    }\n\n    function onRemove() {\n        combiner.remove();\n        orbiter.fit(combiner);\n    }\n\n    function onFlip() {\n        combiner.flip(function () {\n            orbiter.fit(combiner);\n        });\n    }\n\n    function onMouseDown(e) {\n        onDown(e);\n        addMouseListeners();\n    }\n\n    function onTouchDown(e) {\n        onDown(e);\n        addTouchListeners();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    function addMouseListeners() {\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n    }\n\n    function addTouchListeners() {\n        window.addEventListener('touchmove', onMove);\n        window.addEventListener('touchend', onUp);\n    }\n\n    function removeListeners() {\n        window.removeEventListener('touchmove mousemove', onMove);\n        window.removeEventListener('touchend mouseup', onUp);\n    }\n\n    // container.addEventListener('dblclick', onDoubleClick);\n    container.addEventListener('mousedown', onMouseDown);\n    container.addEventListener('touchstart', onTouchDown);\n    container.addEventListener('mousewheel', onWheel);\n\n    window.addEventListener('resize', onResize, false);\n    btnAdd.addEventListener('click', onAdd);\n    btnRemove.addEventListener('click', onRemove);\n    btnFlip.addEventListener('click', onFlip);\n\n    animate();\n\n    onAdd();\n\n}());"]}